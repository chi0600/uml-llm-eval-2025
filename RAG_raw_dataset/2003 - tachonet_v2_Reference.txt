Prompt: 
Generate a sequence diagram using PlantUML from these requirements so that I can provide it to Planttext to visualize it.                                                                                                            
Requirements:
Use Case 02 – Check tachograph card status
Description This use case consists of checking the status of a tachograph card based on its card
number. This use case is very useful for CIAs in order to check the validity of a card
prior to performing some administrative tasks (e.g. to avoid from declaring a
lost/stolen card for a wrongly keyed-in card number,...). It is also useful for
enforcement authorities during road-checks where workshop could also be checked
(beside driver cards).
The checked card is identified by its card number and its issuing Member State code.
As an issued card must be unique, it should only exist in a single CIA data store (the
CIA having issued the card).
Basic flow The basic flow consists of the following steps:
Step Action
1 TACHOnet deciphers the received request and logs the received request
as-is in its tracking database.
2 TACHOnet validates its syntax and assigns it a TACHOnet refid
(TCNRefId).
3 TACHOnet will build as many new requests as issuing Member State
codes identified in the original request. TACHOnet figures out the target
issuing Member State(s) from the issuing Member State code given for
each to-be-checked card. Every new request only contains card
number(s) issued by a particular Member State.
4 For each identified issuing Member State(s), TACHOnet builds, logs and
encrypts the new request, sends it to it and waits for receiving the
response.
5 For each received response, TACHOnet deciphers it, logs it as-is in its
tracking database and validates its syntax. If it’s valid, TACHOnet stores
the response message (linked to the TCNRefId) in the database (for later
building the single consolidated response that TACHOnet will send
when all responses are received or when the timeout is reached).
6 When all responses are received or when the timeout is reached,
TACHOnet builds, logs and encrypts the consolidated response (from
the responses received so far), and sends it to the original caller.

Reference Response:
@startuml
title Use Case 02 – Check tachograph card status

actor CIA as "Card Issuing Authority"
participant TACHOnet
participant "Member State CIA" as MemberCIA
database "TACHOnet Tracking Database" as DB

CIA -> TACHOnet : Send request (Card number and Issuing Member State code)
activate TACHOnet

TACHOnet -> TACHOnet : Decipher request
TACHOnet -> DB : Log received request as-is

TACHOnet -> TACHOnet : Validate syntax
TACHOnet -> TACHOnet : Assign TCNRefId

TACHOnet -> TACHOnet : Build new requests (by Issuing Member State codes)
TACHOnet -> DB : Log new requests

loop For each identified Issuing Member State
    TACHOnet -> MemberCIA : Send encrypted request
    activate MemberCIA
    MemberCIA -> TACHOnet : Send response
    deactivate MemberCIA
end

loop Process received responses
    TACHOnet -> TACHOnet : Decipher response
    TACHOnet -> DB : Log response as-is
    TACHOnet -> TACHOnet : Validate syntax
    TACHOnet -> DB : Store response message (linked to TCNRefId)
end

alt All responses received or timeout reached
    TACHOnet -> TACHOnet : Build consolidated response
    TACHOnet -> DB : Log consolidated response
    TACHOnet -> CIA : Send encrypted consolidated response
end

deactivate TACHOnet
@enduml
